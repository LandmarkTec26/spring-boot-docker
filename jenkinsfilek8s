pipeline{
  agent any 
  tools{
    maven "maven3.8.4"
  }
stages{
stage('SCM Checkout'){
     steps{
 git 'https://github.com/LandmarkTec26/spring-boot-docker.git'
}
}  
stage('maven-Build'){ 
steps{
    sh "mvn clean package"
  }
}
stage('code quality'){ 
steps{
    sh "mvn sonar:sonar"
  }
}
stage('upload artifact'){ 
steps{
    sh "mvn deploy"
  }
}
stage('approval'){
steps{
timeout (time:5, unit:'HOURS'){
input message: "please verify and approve"
}
}
}
stage('Build Docker Image'){
steps{
sh "docker build -t joshayeni/spring-boot-mongo ."
    }
}
stage('Push Docker Image'){
steps{
    withCredentials([usernamePassword(credentialsId: 'Dockercred', passwordVariable: 'passWD', usernameVariable: 'uName')]) {
    sh "docker login -u ${uName} -p ${passWD}"
    }
    sh "docker push joshayeni/spring-boot-mongo"
    }
}

stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }

stage('Deploy To Kuberates Cluster'){
steps{
        sh "kubectl apply -f springapp.yml"
      } 
     }
}
}
